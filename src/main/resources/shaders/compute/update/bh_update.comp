// =============================================================
//                          Update kernel 
// =============================================================

// This kernel is used to reset the queues and update the number of bodies
// Dispached with (1,0,0)
// Uniforms: resetValuesOrDecrementDeadBodies
// SSBOs: SimulationValues, MergeTasks, WorkQueueIn

void updateKernel() {
    uint gid = gl_GlobalInvocationID.x;
    if (gid == 0u) {
        if (resetValuesOrDecrementDeadBodies==1u) {
            //Reset queues (both halves)
            uint workQueueStride = 2u + sim.numBodies;
            for (uint bufferIdx = 0u; bufferIdx < 2u; ++bufferIdx) {
                uint base = bufferIdx * workQueueStride;
                workQueues[base + 0u] = 0u; // head
                workQueues[base + 1u] = 0u; // tail
            }
            mergeTasksTail = 0u;
            mergeTasksHead = 0u;


            //Update units if changed
            if (mass != 0) { //Set mass to 0 if no change to units

                updateUnits(mass, density, len, time);

            }

        }
        else {
            //Update Number of Bodies
            sim.numBodies -= sim.justDied;
            sim.justDied = 0u;
            sim.uintDebug[0] = 0u;

    }
        }
}
